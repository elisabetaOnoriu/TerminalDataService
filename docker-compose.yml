services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    env_file:
      - .env
    ports:
      - "4566:4566"
    volumes:
      - "./.localstack:/var/lib/localstack"
    networks:
      - sky-comm

  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - sky-comm

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - sky-comm

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: terminal-service-app
    command: >
      bash -lc "uvicorn main:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      REDIS_URL: redis://redis:6379
    depends_on:
      localstack:
        condition: service_started
      redis:
        condition: service_healthy
      loki:
        condition: service_healthy
    networks:
      - sky-comm
    labels:
      service: "terminal-service-app"
      env: "dev"

  kafka:
    image: bitnamilegacy/kafka:4.0.0-debian-12-r10
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - sky-comm

  loki:
    image: grafana/loki:2.9.8
    command: [ "-config.file=/etc/loki/config.yaml" ]
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki:ro
      - loki-data:/loki
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://localhost:3100/ready" ]
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - sky-comm

  grafana:
    image: grafana/grafana:11.1.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - sky-comm
    volumes:
      - grafana-data:/var/lib/grafana

  promtail:
    image: grafana/promtail:2.9.8
    command: [ "-config.file=/etc/promtail/config.yaml" ]
    depends_on:
      loki:
        condition: service_healthy
    networks:
      - sky-comm
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yaml:ro
      - /var/log/journal:/var/log/journal:ro
      - /run/log/journal:/run/log/journal:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  loki-data:
  grafana-data:

networks:
  sky-comm:
    external: true
