"""next change

Revision ID: 9d8ef4bd5ed2
Revises: 80529003138b
Create Date: 2025-09-01 09:55:21.209786

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9d8ef4bd5ed2'
down_revision: Union[str, Sequence[str], None] = '80529003138b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('devices', 'status',
               existing_type=postgresql.ENUM('CONNECTED', 'DISCONNECTED', 'PENDING', name='status'),
               type_=sa.Enum('CONNECTED', 'DISCONNECTED', 'PENDING', name='status_enum', native_enum=False),
               existing_nullable=False)
    op.drop_constraint(op.f('devices_client_id_fkey'), 'devices', type_='foreignkey')
    op.create_foreign_key(None, 'devices', 'clients', ['client_id'], ['client_id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'devices', type_='foreignkey')
    op.create_foreign_key(op.f('devices_client_id_fkey'), 'devices', 'clients', ['client_id'], ['client_id'])
    op.alter_column('devices', 'status',
               existing_type=sa.Enum('CONNECTED', 'DISCONNECTED', 'PENDING', name='status_enum', native_enum=False),
               type_=postgresql.ENUM('CONNECTED', 'DISCONNECTED', 'PENDING', name='status'),
               existing_nullable=False)
    # ### end Alembic commands ###
